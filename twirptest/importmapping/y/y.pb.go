// Code generated by protoc-gen-go. DO NOT EDIT.
// source: y/y.proto

package twirp_twirptest_importmapping_y

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgY struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgY) Reset()         { *m = MsgY{} }
func (m *MsgY) String() string { return proto.CompactTextString(m) }
func (*MsgY) ProtoMessage()    {}
func (*MsgY) Descriptor() ([]byte, []int) {
	return fileDescriptor_763568a0ddb92877, []int{0}
}

func (m *MsgY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgY.Unmarshal(m, b)
}
func (m *MsgY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgY.Marshal(b, m, deterministic)
}
func (m *MsgY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgY.Merge(m, src)
}
func (m *MsgY) XXX_Size() int {
	return xxx_messageInfo_MsgY.Size(m)
}
func (m *MsgY) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgY.DiscardUnknown(m)
}

var xxx_messageInfo_MsgY proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgY)(nil), "twirp.twirptest.importmapping.y.MsgY")
}

func init() { proto.RegisterFile("y/y.proto", fileDescriptor_763568a0ddb92877) }

var fileDescriptor_763568a0ddb92877 = []byte{
	// 78 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xac, 0xd4, 0xaf, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x2f, 0x29, 0xcf, 0x2c, 0x2a, 0xd0, 0x03, 0x93, 0x25,
	0xa9, 0xc5, 0x25, 0x7a, 0x99, 0xb9, 0x05, 0xf9, 0x45, 0x25, 0xb9, 0x89, 0x05, 0x05, 0x99, 0x79,
	0xe9, 0x7a, 0x95, 0x4a, 0x6c, 0x5c, 0x2c, 0xbe, 0xc5, 0xe9, 0x91, 0x49, 0x6c, 0x60, 0xf5, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x30, 0x61, 0xa3, 0x80, 0x3c, 0x00, 0x00, 0x00,
}
